{"version":3,"file":"static/js/599.93a131f2.chunk.js","mappings":"0MACA,GAAgB,gBAAkB,8BAA8B,MAAQ,oBAAoB,UAAY,wBAAwB,KAAO,mBAAmB,cAAgB,4BAA4B,WAAa,yBAAyB,UAAY,wBAAwB,WAAa,0B,SCiF7R,MA3EA,WACE,IAAMA,GAAWC,EAAAA,EAAAA,MACjBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAkCL,EAAAA,EAAAA,WAAS,GAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAzCE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAuB9B,OArBAG,EAAAA,EAAAA,YAAU,WAURC,EAAAA,EAAAA,QATgB,CACdC,OAAQ,MACRC,IAAI,yFACJC,OAAQ,CAAEC,SAAU,SACpBC,QAAS,CACPC,OAAQ,sBAMTC,MAAK,SAAAC,GACJd,EAAUc,EAASC,KAAKC,SACxBZ,GAAa,EACf,IACCa,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAChB,GACJ,GAAG,KAGDE,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,MAAUH,SAAC,mBACzBnB,GAAcoB,EAAAA,EAAAA,KAACG,EAAAA,GAAQ,CACdC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,UAAU,oBACVC,OAAO,IACPC,aAAc,CAAKC,SAAU,WAAWC,KAAM,MAAMC,IAAK,MAAMC,UAAU,yBACzEC,SAAS,KACNd,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,gBAAoBH,SAC7CvB,IACO,OAANA,QAAM,IAANA,OAAM,EAANA,EACIuC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAK,IAC1BC,KAAI,SAAAC,GAA6D,IAA1DF,EAAKE,EAALF,MAAOG,EAAED,EAAFC,GAAIC,EAAWF,EAAXE,YAAaC,EAAYH,EAAZG,aAAcC,EAAYJ,EAAZI,aACtCC,EAAc,IAAIC,KAAKH,GACvBI,EAAcC,OAAOC,MAAMJ,GAC7B,UACAA,EAAYK,cACVC,EAAYC,KAAKC,MAA8B,IAAvBL,OAAOJ,GAAuB,IAC5D,OACEvB,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,KAASH,UACtBF,EAAAA,EAAAA,MAACoC,EAAAA,GAAI,CACHhC,UAAWC,EAAAA,UACXgC,MAAO,CAAEC,KAAMjE,GACfkE,GAAE,WAAAC,OAAajB,GAAKrB,SAAA,EAEpBC,EAAAA,EAAAA,KAAA,OACEI,OAAQ,IACRC,MAAO,IACPJ,UAAWC,EAAAA,IACXoC,IAAG,kCAAAD,OAAoChB,GACvCkB,IAAKtB,KAEPpB,EAAAA,EAAAA,MAAA,OAAKI,UAAWC,EAAAA,cAAkBH,SAAA,EAChCC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAAA,WAAeH,SAAEkB,KAChCjB,EAAAA,EAAAA,KAAA,KAAGC,UAAWC,EAAAA,UAAcH,SAAE2B,KAC9B7B,EAAAA,EAAAA,MAAA,KAAGI,UAAWC,EAAAA,WAAeH,SAAA,CAAC,eAAa+B,EAAU,cAhB7BV,EAqBlC,SAKZ,C","sources":["webpack://Movies/./src/components/Home/Home.module.css?58dd","components/Home/Home.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"conteiner_movie\":\"Home_conteiner_movie__eBmVo\",\"title\":\"Home_title__XLxL1\",\"itemMovie\":\"Home_itemMovie__uDLAq\",\"item\":\"Home_item__KHBnP\",\"cartConteiner\":\"Home_cartConteiner__pPRi4\",\"titleMovie\":\"Home_titleMovie__hkCzv\",\"yearMovie\":\"Home_yearMovie__dynyC\",\"scoreMovie\":\"Home_scoreMovie__+eKgk\"};","import { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link, useLocation } from 'react-router-dom';\nimport { TailSpin } from 'react-loader-spinner';\n\nimport css from './Home.module.css';\n\nfunction Home() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n  const [isloadind, setIsloadind] = useState(true);\n\n  useEffect(() => {\n    const options = {\n      method: 'GET',\n      url: `https://api.themoviedb.org/3/trending/all/day?api_key=9472ead59ab5d905fc1e97a44f85f6b1`,\n      params: { language: 'en-US' },\n      headers: {\n        accept: 'application/json',\n      },\n    };\n\n    axios\n      .request(options)\n      .then(response => {\n        setMovies(response.data.results);\n        setIsloadind(false)\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <>\n      <h1 className={css.title}>Trending today</h1>\n      {isloadind  ?  <TailSpin\n                height=\"300\"\n                width=\"300\"\n                color=\"#4fa94d\"\n                ariaLabel=\"tail-spin-loading\"\n                radius=\"1\"\n                wrapperStyle={{    position: \"absolute\",left: \"50%\",top: \"50%\",transform:\" translate(-50%,-50%)\"}}\n                visible={true}\n              /> : <ul className={css.conteiner_movie}>\n        {movies &&\n          movies\n            ?.filter(movi => movi.title)\n            .map(({ title, id, poster_path, release_date, vote_average }) => {\n              const releaseDate = new Date(release_date);\n              const releaseYear = Number.isNaN(releaseDate)\n                ? 'Unknown'\n                : releaseDate.getFullYear();\n              const userScore = Math.round((Number(vote_average) * 100) / 10);\n              return (\n                <li className={css.item} key={id}>\n                  <Link\n                    className={css.itemMovie}\n                    state={{ from: location }}\n                    to={`/movies/${id}`}\n                  >\n                    <img\n                      height={450}\n                      width={300}\n                      className={css.img}\n                      src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n                      alt={title}\n                    />\n                    <div className={css.cartConteiner}>\n                      <h2 className={css.titleMovie}>{title}</h2>\n                      <p className={css.yearMovie}>{releaseYear}</p>\n                      <p className={css.scoreMovie}>User Score: {userScore}%</p>\n                    </div>\n                  </Link>\n                </li>\n              );\n            })}\n      </ul>\n    }\n    </>\n  );\n}\nexport default Home;\n"],"names":["location","useLocation","_useState","useState","_useState2","_slicedToArray","movies","setMovies","_useState3","_useState4","isloadind","setIsloadind","useEffect","axios","method","url","params","language","headers","accept","then","response","data","results","catch","error","console","_jsxs","_Fragment","children","_jsx","className","css","TailSpin","height","width","color","ariaLabel","radius","wrapperStyle","position","left","top","transform","visible","filter","movi","title","map","_ref","id","poster_path","release_date","vote_average","releaseDate","Date","releaseYear","Number","isNaN","getFullYear","userScore","Math","round","Link","state","from","to","concat","src","alt"],"sourceRoot":""}